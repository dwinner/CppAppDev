; biosout.asm
; Выводит на экран все ASCII-символы без исключения
;
; Компиляция:
; TASM:
; tasm /m biosout.asm
; tlink /t /x biosout.obj
; MASM:
; ml /c biosout.asm
; link biosout.obj,,NUL,,,
; exe2bin biosout.exe biosout.com
; WASM
; wasm biosout.asm
; wlink file biosout.obj form DOS COM
;

		.model	tiny
		.code
		org	100h	; Начало COM-файла
start:
		mov	ax,0003h
		int	10h	; Видеорежим 3 (очистка экрана и установка курсора в 0,0)
		mov	dx,0	; DH и DL будут использоваться для хранения положения
				; курсора. Начальное положение - 0,0
		mov	si,256	; SI будет счетчиком цикла
		mov	al,0	; Первый символ - с кодом 00h
		mov	ah,9	; Номер видеофункции "вывод символа с атрибутом"
		mov	cx,1	; Выводится один символ за раз
		mov	bl,00011111b	; атрибут символа - белый на синем
cloop:
		int	10h	; Вывести символ на экран

		push	ax	; Сохранить текущий символ и номер функции
		mov	ah,2	; Номер видеофункции 2 - изменить положение курсора
		inc	dl	; Увеличить текущий столбец на 1
		int	10h	; Переместить курсор
		mov	ax,0920h ; AH = 09, AL = 20h (ASCII-код пробела)
		int	10h	; Вывести пробел
		mov	ah,2	; Номер видеофункции 2
		inc	dl	; Увеличить столбец на 1
		int	10h	; Переместить курсор
		pop	ax	; Восстановить номер функции в ah и текущий символ в al
	
		inc	al	; Увеличить AL на 1 - следующий символ
		test	al,0Fh	; Если AL не кратен 16,
		jnz	continue_loop ; продолжить цикл,

		push	ax	; иначе сохранить номер функции и текущий символ
		mov	ah,2	; Номер видеофункции 2
		inc	dh	; Увеличить номер строки на 1
		mov	dl,0	; Столбец = 0
		int	10h	; Установить курсор на начало следующей строки
		pop	ax	; Восстановить номер видеофункции и текущий символ

continue_loop:
		dec	si	; Уменьшить SI на 1, если он не стал нулем - продолжить
		jnz	cloop	; CX используется внутри цикла, так что нельзя
				; использовать команду LOOP для его организации
        
		ret		; Завершение COM-файла
		end	start
