/* Generated by Together */
#ifndef WIM__CANINTERFACE_H
#define WIM__CANINTERFACE_H
/******************************************************************************
*=====================    Copyright by Continental AG    ======================
*******************************************************************************
* Titel        : WIM__CanInterface.h
*
* Description  : Class handling CAN signals WIM is receiving and transmitting
*
* Environment  : OSEK, JCP (NEC V850)
*
* Responsible  : L.Gruenewald, Schleissheimer GmbH
*
* Guidelines   : SMK 3.3  
*
* Template name: OOLite Codefile, Revision 1.0
*
* CASE-Tool    : Together Controlcenter, Version 6.2
*
* Revision List: (Will be filled by PVCS)
* Archive: $Log: WIM__CanInterface.h  $
* Archive: Revision 1.2.1.4 2014/04/08 17:20:09CEST Wagner-EXT, Alexander (uidw3785) 
* Archive: DC MR 40060 : 213/AC, WIM: Sending of SLACK HIL ID on CAN
* Archive: Revision 1.2.1.3 2014/03/28 15:26:40CET Wagner-EXT, Alexander (uidw3785) 
* Archive: DC MR 39277 : WIM: Sending of WIM HIL ID on CAN
* Archive: Revision 1.2.1.2 2012/11/21 12:46:29CET Immel-EXT, Marc (uid37561) 
* Archive: Initial revision
* Archive: Member added to project /id/dag_PF3/sw/pkg/wim/core/coreGenPF3AC/project.pj
* Archive: Revision 1.2 2012/11/21 12:46:29CET Immel-EXT, Marc (uid37561) 
* Archive: Migration of WIM-AC from PVCS to MKS
* Archive: - used release: DC.SW.PAC.WIM_205IC_AC_COMMON_VarW.V01.00.pre17
* Archive: Revision 1.1 2010/06/11 13:39:58CEST uid37556 
* Archive: Initial revision
* Archive: Member added to project /id/dag_PF3/sw/pkg/wim/core/coreGenPF3AC/project.pj
* 
*    Rev 1.4   Jun 14 2012 16:19:04   SCHL_Dirk.Gottwalles
* DC MR 26329: W222, E007/GC, WIM: Change of Prio1Mute and Lowering times - ÄLP2873
* DC MR 25901: W222, E007/AC, WIM: Change of Prio1Mute and Lowering times - ÄLP2873
* DC MR 26324: W222, E007/AC, WIM: Boundary and Retrigger condition of protocol_class_2
* 
*    Rev 1.3   Apr 05 2012 13:35:10   SCHL_Dirk.Gottwalles
* DC MR 24870: W222, E007/GC, WIM: Implement changes from Review ORM2907
* DC MR 25007: W222, E007/GC, WIM: Displacement of handling messages - WDM20280
* DC MR 25041: Do not specify message propagation in message description files
* DC MR 25095: W222, E007/GC, WIM: Improvement of Timer accuracy for display role - WDM 25704
* DC MR 25034: Reduction of lag times in case of vehicle locked
* DC MR 25393: W222, E007/GC, WIM: No cancel of interval acoustic - WDM31269, ÄLP2895
* DC MR 24871: W222, E007/AC, WIM: Implement changes from Review ORM2907
* 
*    Rev 1.2   Jan 13 2012 16:18:54   SCHL_Dirk.Gottwalles
* DC MR 24093: W222, E007/GC, WIM: Acoustic warning does not block display - WDM20499
* DC MR 23683: W222, E007/GC, WIM: Sync acoustic is cancelled by async acoustic WDM21143
* DC MR 24088: W222, E007/GC, WIM: Warning blocks display WDM22837, WDM23219
* DC MR 24089: W222,E007,AC, WIM: New configuration values Chauffeur_Avl and ShiftStyle_Variant
* DC MR 24343: W222, E007/AC, WIM: Patch for 0x2000BC and 0x2000C1 (Country coding), WDM23191
* 
*    Rev 1.1   Jun 11 2010 14:01:08   SCHL_Thomas.Godemann
* DC MR20480 AC, Startup MR for Modul WIM in E001
* DC MR20481 GC, Startup MR for Modul WIM in E001
* 
*    Rev 1.0   Jun 07 2010 13:19:22   SCHL_Thomas.Godemann
* Initial revision.
* 
* --------------------------------------------------------------------------
* Date      | Author | Reason     | Change
* --------------------------------------------------------------------------
* 10-06-03    LarGru   MR20480      Initial revision for W222
*
****************************************************************************/

/****************************************************************************
** Header Files (Only those that are needed in this file)
*****************************************************************************/

/* System Header Files */
#include "cdef.h"

/* Foreign headerfiles */

/* Own headerfiles */
#include "WIM__Types.h"

/******************************************************************************
* Definition of exported global data used by Class
* Macros, Enumerations, Types,  Forward declarations
*******************************************************************************/

/**
 * Hil Id's for e-call warnings
 */
extern const uint32 WIM__aECallWarningIds[];

/******************************************************************************
* CLASS DEFINITION
*******************************************************************************/
#ifdef TOGETHER /* open C++ class */

/**
* Class handling CAN signal receive and transmit
*/
class WIM__CanInterface {
public: 
#endif

/******************************************************************************
*   Class Attributes
*******************************************************************************/

/* System Wide Scope */
#ifdef TOGETHER
public:
#endif
  
/* Package Global Scope */

/* File Local Scope */
#ifdef TOGETHER
private:
#endif

   /**
   * Array with delay times for mute/volume decrease CAN signals (HU)
   * @range  values: 0..255
   * @values as given in the EEP configuration
   */
   /*# static const uint8 WIM__ru8DelayTimes[]; */

   /**
   * delay time for volume decrease CAN signal (HU) in ms
   * @range  0..2^16-1
   * @values 1000, 2000, 500, 0 milliseconds
   */
   /*# static uint16 WIM__u16DelayVolDecOff; */

   /**
   * delay time for mute CAN signal (HU) in ms
   * @range  0..2^16-1
   * @values 1000, 2000, 500, 0 milliseconds
   */
   /*# static uint16 WIM__u16DelayMuteOff; */

   /**
   * delay time for mute/lower CAN signal (HU) in ms in case of async acoustic
   */
   /*# static uint16 WIM__u16DelayAsyncOff; */

   /**
   * structures storing request bits for both CAn signals, WIM internal
   * and external (received from CAN ECU MPM)
   * @range  see struct definition
   * @values see struct definition
   */
   /*# static struct WIM__stRequest; */


/******************************************************************************
*   Class Operations
*******************************************************************************/

/* Package Global Scope */
#ifdef TOGETHER
public:
#endif


   /**
   * send "mute"/"volume decrease" to head-unit
   *   @return  void
   *   @param   boSwitchMute - Send value for the mute signal
   *   @param   boSwitchVolDec - Send value for the decrease signal
   *   @param   u32WimHilId - HIL ID of currently displayed warning
   *   @param   WIM__u16SlackHilId - HIL ID of currently displayed slack
   *   @param   u16PrivacyPopUpState - Privacy pop up state for sending value on CAN
   *   @param   boEcallEnd - E call state for sending value on CAN
   *   @author  D.Gottwallse, Schleissheimer GmbH 
   */
   void WIM__vTransmitHeadUnitSig(
       bool boSwitchMute,
       bool boSwitchVolDec,
       uint32 u32WimHilId,
       uint16 WIM__u16SlackHilId,
       uint16 u16PrivacyPopUpState,
       bool boEcallEnd);

   /**
   * set WIM Hil ID to head-unit
   *   @return  void
   *   @param   boSwitchMute - Send value for the mute signal
   *   @author  A.Wagner, Schleissheimer GmbH 
   */
   void WIM__vSetHeadUnitHilId(uint32 u32WimHilId);
   
   /**
   * set Slack Hil ID to head-unit
   *   @return  void
   *   @param   u16SlackHilId - HIL ID of currently displayed slack
   *   @author  A.Wagner, Schleissheimer GmbH 
   */
   void WIM__vSetHeadUnitSlackHilId(uint16 u16SlackHilId);

   /**
   * Initialisation of the the class
   *   @return  void
   *   @param   none
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vCanInterfaceInit(void);

   /**
   * Deinitialisation of the class
   *   @return  void
   *   @param   none
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vCanInterfaceDeinit(void);

   /**
   * Initialisation of CAN transmit signals
   *   @return  void
   *   @param   none
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vCanInterfaceInitTxCan(void);

   /**
   * Timer callback-function
   * Called if the delay timer for HU mute/volume decrease has elapsed. Depending
   * on the CorrTag parameter the CAN signals are cleared
   *   @return  void
   *   @param   enTimer: Identifier of timer, xCorrTag: correlation tag
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vClearHuTxSignal(WIM__tenTimer enTimer, WIM__txCorrTag xCorrTag);

   /**
   * The function sets the internal request 
   * A mute/volume decrease of the head unit is canceled by sending specific CAN 
   * signals (if a delay is specified, the signals are canceled on timer end).
   *   @return  void
   *   @param   boOn: True = set request, False = clear request
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vSetVolDecRequest_AC(WIM__tenAcuQualifier enAcuType, bool boOn);
 
   /**
   * The function sets the internal request 
   * A mute/volume decrease of the head unit is canceled by sending specific CAN 
   * signals (if a delay is specified, the signals are canceled on timer end).
   *   @return  void
   *   @param   boOn: True = set request, False = clear request
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vSetMuteRequest_AC(WIM__tenAcuQualifier enAcuType, bool boOn);

   /**
   * Cyclic function. Processes CAN input signals and controls transmission of
   * output signals
   *   @return  void
   *   @param   none
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   void WIM__vCanInterfaceMain(void);

   /**
    * Process privacy popup warning
    *   @return void
    *   @param enEvent received event
    *   @author D.Vinevtsev, Schleissheimer GmbH
    */
   void WIM__vProcessMBCallPrivacyPopup(EVHD_tenReceiveEvent enEvent);

   /**
   * Set CAN value if privacy popup warning gets activated from turn-on-condition
   *   @return bool
   *   @param enEvent received event
   *   @author A.Wagner, Schleissheimer GmbH
   */
   bool WIM_boSetPrivacyPopUpCanValue(bool boPrivacyPopUpActive);

/* File Local Scope */
#ifdef TOGETHER
private:

   /**
   * Reads CAN input signals and sets request bits
   *   @return  void
   *   @param   none
   *   @author  T.Godemann, Schleissheimer GmbH 
   */
   /*# static void WIM__vReadCanSignals(void); */

#endif
   
#ifdef TOGETHER /* close the C++ class */
};
#endif
/********************
**  CLASS END
*********************/
#endif /* WIM__CANINTERFACE_H */
