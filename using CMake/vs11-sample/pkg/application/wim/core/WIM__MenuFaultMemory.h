/* Generated by Together */
#ifndef WIM__MENUFAULTMEMORY_H
#define WIM__MENUFAULTMEMORY_H
/******************************************************************************
*=====================    Copyright by Continental AG    ======================
*******************************************************************************
* Titel        : WIM__MenuFaultMemory.h
*
* Description  : The menu client WIM__MenuFaultMemory by TPOL is activated and is
*                part of the Main menu 'SERVICE'. The stored errors while driving
*                are indicated.
*
* Environment  : OSEK, JCP (NEC V850)
*
* Responsible  : L. Gruenewald, Schleissheimer GmbH
*
* Guidelines   : SMK 3.3
*
* Template name: OOLite Codefile, Revision 1.0
*
* CASE-Tool    : Together Controlcenter, Version 6.2
*
* Revision List: (Will be filled by PVCS)
* Archive: $Log: WIM__MenuFaultMemory.h  $
* Archive: Revision 1.1.2.2 2013/03/27 17:24:13CET Immel-EXT, Marc (uid37561) 
* Archive: Initial revision
* Archive: Member added to project /id/dag_PF3/sw/pkg/wim/core/coreGenPF3GC/project.pj
* Archive: Revision 1.3 2012/10/18 16:58:08CEST Immel-EXT, Marc (uid37561) 
* Archive: DC MR 27470: W222, E010/GC, WIM: Active sound shall play to the end when display goes off - ÄLP2896
* Archive: DC MR 29924: E010: WIM acoustic problems: corrections for WDM53980, 53982 and 53999
* Archive: DC MR 29926: W222GC: WDM47699 WIM do not differs between Frontal and Lateral Collision warning sound
* Archive: DC MR 29928: W222, E010/GC, WIM: Sync acoustic is delayed too long
* Archive: DC MR 29866: BR222, E010/GC, WIM: Redesign of fault memory entry management
* Archive: DC MR 30023: W222IC-GC, E010: When displaying the oil switch warning the GC makes a reset
* Archive: Revision 1.2 2012/05/18 10:42:43CEST Gottwalles Dirk (uid37556) (uid37556) 
* Archive: Member moved from WIM__MenuFaultMemory.h in project /id/dag_PF3/sw/pkg/wim/core/project.pj[dag_PF3.sw.pkg.wim_COMMON_IC222GC_VarP] to WIM__MenuFaultMemory.h in project /id/dag_PF3/sw/pkg/wim/core/coreGenPF3GC/project.pj[dag_PF3.sw.pkg.wim_COMMON_GenPF3GC_VarX].
* Archive: Revision 1.1 2010/12/01 16:07:52CET Brueggemann Alexander (uidt3637) (uidt3637) 
* Archive: Initial revision
* Archive: Member added to project /id/dag_PF3/sw/pkg/wim/core/project.pj
* 
*    Rev 1.0   Dec 03 2010 15:54:30   SCHL_Lars.Gruenewald
* Initial revision.
* 
*
*
*******************************************************************************/

/******************************************************************************
** Header Files (Only those that are needed in this file)
*******************************************************************************/

/* System Header Files */
#include "cdef.h"

/* Foreign headerfiles */

/* Own headerfiles */

/******************************************************************************
* Definition of exported global data used by Class
* Macros, Enumerations, Types,  Forward declarations
*******************************************************************************/
/************************************
* MACROS FOR USAGE MenuFaultMemory
************************************/
#define WIM__mSetHighWord(u32Data, u16Word)    (u32Data) = ((((uint32)(u16Word))<<16) | (0x0000FFFF & (u32Data)))
#define WIM__mSetLowWord(u32Data, u16Word)     (u32Data) = ((((uint32)(u16Word)) & 0x0000FFFF) | (0xFFFF0000 & (u32Data)))
#define WIM__mGetHighWord(u32Data)             ((uint16)((u32Data)>>16))
#define WIM__mGetLowWord(u32Data)              ((uint16)(u32Data))


/******************************************************************************
* CLASS DEFINITION
*******************************************************************************/
#ifdef TOGETHER /* open C++ class */

/**
* MMI Interface class for 'Fault Memory' menu
*/
class WIM__FaultMemory {
public:
#endif

/******************************************************************************
*   Class Attributes
*******************************************************************************/

/* System Wide Scope */
#ifdef TOGETHER
public:
#endif

/* Package Global Scope */


/* File Local Scope */
#ifdef TOGETHER
private:
#endif


/******************************************************************************
*   Class Operations
*******************************************************************************/

/* Package Global Scope */
#ifdef TOGETHER
public:
#endif

   /**
   * WIM-'Fault Memory' menu initialisation
   *   @return  void
   *   @param   none
   *   @author  L.Gruenewald, Schleissheimer GmbH
   */
   void WIM__vMenuFaultMemInit(void);


   /**
   * Number of entries in WimFaultMemory is changed. The function is called of
   * WIM__vSetFaultMemFlag() on WIM__Scheduler.c.
   * To be adapted must:
   * - Number of entries in WimFaultMemory (always)
   * - current number of the entry in WimFaultMemory (if necessary)
   * - Number of Warning Message  (if necessary)
   * @return void
   * @param  enChangingMsg: Message that causes the change in FaultMem
   * @param  boFaultMemFlag: true when Msg was added, false when Msg was removed from FaultMem
   * @author L. Gruenewald
   */
   void WIM__vMenuFaultMemEntriesChanged(WIM_tenMsg enChangingMsg, bool boFaultMemFlag);

   /**
   * Key callback-function that is called to handle a key-event.
   * @param  Eventhandler Event
   * @author L. Gruenewald
   */
   void WIM__vMenuFaultMemKeyCallback(EVHD_tenReceiveEvent enEvent);

   /**
   * Stop callback-function that is called if WIM-'Fault Memory' menu loses the display
   * @param  Eventhandler Event
   * @author L. Gruenewald
   */
   void WIM__vMenuFaultMemResetCallback(EVHD_tenReceiveEvent enEvent);


/* File Local Scope */
#ifdef TOGETHER
private:
#endif


   /**
   * The function looks for partner message according to the following rule:
   * - is message stored in fault memory ? and
   * not(
   *    - has the found warning a partner message ? and
   *    - is their fault signal memory flag set ? and
   *    - is the WIM_Enum of the partner message smaller than that the found message ?
   * )
   * the function called of WIM__vFaultMemDisplayCallback() and WIM__boFaultMemKeyCallback()
   * @return bool, False = Partner message is to be indicated, True = found warning is to be indicated
   * @param  WIM__tenMsg enMsg: identifies the WIM-Enum
   * @author K. Warnicki
   */
   /*# static bool WIM__boCheckFaultMemFlagAndPartnerMessage(WIM_tenMsg enMsg) */


#ifdef TOGETHER /* close the C++ class */
};
#endif
/********************
**  CLASS END
*********************/
#endif /* WIM__MENUFAULTMEMORY_H */
