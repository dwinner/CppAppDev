/* Generated by Together */
#ifndef WIM__STATEACCESSHELPERS_H
#define WIM__STATEACCESSHELPERS_H

/******************************************************************************
*=====================      Copyright by Continental AG      ==================
*******************************************************************************
* Titel        : WIM__StateAccessHelpers.h
*
* Description  : Interfaces for a set of message attribute access helpers 
*
* Responsible  : M.Lazarev, Schleissheimer GmbH
*
* Guidelines   : SMK 3.3  
*
* Template name: OOLite Codefile, Revision 1.0
*
* CASE-Tool    : Together Controlcenter, Version 6.2
* 
* Revision List: (Will be filled by PVCS)
* Archive: $Log: WIM__StateAccessHelpers.h  $
* Archive: Revision 1.5 2014/08/13 18:27:56CEST Immel-EXT, Marc (uid37561) 
* Archive: - removed unknown tokes at the start of the file
* Archive: Revision 1.4 2014/08/13 18:12:47CEST Immel-EXT, Marc (uid37561) 
* Archive: DC MR 42077: WIM: SLACK is displayed with noise
* Archive: DC MR 41987: WIM: Break of 100ms is seen in case of acoustic replacement async to async - #10894
* Archive: DC MR 41983: WIM: Start of "BSM Warnton" output is delayed >300ms - WDM 337
* Archive: DC MR 41981: BR213-EL/E008, WIM: Minimum display time are extended after retriggering - WDM 348
* Archive: DC MR 41975: WIM: Change HIL timing for single line acknowledgements according to customer - WDM257
* Archive: Revision 1.3 2014/06/06 17:05:16CEST Wagner-EXT, Alexander (uidw3785) 
* Archive: DC MR 38112 : WIM: Introduction of "Singleline Acknowledgements" - MR47
* Archive: DC MR 40764 : WIM: Changes after code review for single line acknowledgements -  ORM 7144
* Archive: DC MR 40531 : Single line acknowledgement should cancel a running startup animation
* Archive: Revision 1.2 2013/12/06 17:55:09CET Wagner-EXT, Alexander (uidw3785) 
* Archive: DC MR 37353 : WIM: Implement changes on door warning acoustics after clarification with customer - OPL 2064
* Archive: Revision 1.1 2013/09/16 12:33:19CEST Wagner-EXT, Alexander (uidw3785) 
* Archive: Initial revision
* Archive: Member added to project /id/dag_PF3/sw/pkg/wim/core/coreGenPF3GC/project.pj
*/

/***************************************************************************
** Header Files (Only those that are needed in this file)
****************************************************************************/
/* System Header Files */

/* Foreign headerfiles */

/* Own headerfiles */
#include "WIM_c1.h"

/******************************************************************************
* ATTRIBUTE ACCESS HELPERS
*******************************************************************************/

/**
* Attribute access helper:
* Get state attribute flag for message
*   @return  bool: True, if Flag is set, False if not
*   @param   enAttr Attribute Id, enMsg Message identifier
*   @author  T.Godemann, Schleissheimer GmbH 
*/
bool WIM__boGetStateAttr_Msg(WIM__tenAttrId enAttr, WIM_tenMsg enMsg);

/**
* Attribute access helper:
* Get state attribute flag for message with partner message 
*   @return  bool: True, if Flag is set, False if not
*   @param   enAttr Attribute Id, enMsg Message identifier
*   @author  T.Godemann, Schleissheimer GmbH 
*/
bool WIM__boGetStateAttr_MsgPtnr(WIM__tenAttrId enAttr, WIM_tenMsg enMsg);

/**
* Attribute access helper:
* Get state attribute flag
*   @return  bool: True, if Flag is set, False if not
*   @param   enAttr Attribute Id, enMsg Message identifier
*   @author  T.Godemann, Schleissheimer GmbH 
*/
bool WIM__boGetStateAttr        (WIM__tenAttrId enAttr, WIM_tenMsg enMsg);

/**
* helper function: set/clear fault memory flag
*   @return  void
*   @param   WIM_tenMsg: Message identifier
*   @param   bool boSet: True set flag, False clear flag
*   @author  T.Godemann, Schleissheimer GmbH 
*/
void WIM__vSetFaultMemFlag(WIM_tenMsg enMsg, bool boSet);


/**
* Attribute access helper:
* Get attribute for slack warning display time
*   @return  uint16: display time for slack in ms
*   @param   enMsg: Identifier of message
*   @author  M.Wenske, Schleissheimer GmbH 
*/
uint16 WIM__u16GetSlackDispTime(WIM_tenMsg enMsg);

/**
* Macros for easy access to state handler attributes
*/
#define WIM__mboIsSlackMsg(enMsg)          WIM__menGetSlackMsgType(enMsg)
#define WIM__mboIsHandling(enMsg)     (   (WIM__menGetMsgType((enMsg)) == WIM__nHandling    ) \
                                       || (WIM__menGetMsgType((enMsg)) == WIM__nHandlingPtnr) )
#define WIM__mboIsUrgent(enMsg)            WIM__boGetStateAttr(WIM__nAttrUrgent,      (enMsg))
#define WIM__mboWakeupIc(enMsg)            WIM__boGetStateAttr(WIM__nAttrWakeIc,      (enMsg))
#define WIM__mboKeepActiveIc(enMsg)        WIM__boGetStateAttr(WIM__nAttrKeepActiveIc,(enMsg))
#define WIM__mboIsAutoQuitEn(enMsg)        WIM__boGetStateAttr(WIM__nAttrAutoQuit,    (enMsg)) 
#define WIM__mboIsPretermAutoQuitEn(enMsg) WIM__boGetStateAttr(WIM__nAttrPretermAuto, (enMsg))
#define WIM__mboIsAutoRetrigEn(enMsg)      WIM__boGetStateAttr(WIM__nAttrRetrigAuto,  (enMsg))
#define WIM__mboIsManuRetrigEn(enMsg)      WIM__boGetStateAttr(WIM__nAttrRetrigManu,  (enMsg))
#define WIM__mboIsFaultMemEn(enMsg)        WIM__boGetStateAttr(WIM__nAttrFaultMem,    (enMsg))
#define WIM__mboIsFaultMemClearEn(enMsg)   WIM__boGetStateAttr(WIM__nAttrFaultMemClr, (enMsg))
#define WIM__mboIsDspSyncAcu(enMsg)        WIM__boGetStateAttr(WIM__nAttrAcuSync,     (enMsg))
#define WIM__mboWithAcoustic(enMsg)        WIM__boGetStateAttr(WIM__nAttrWithAcu,     (enMsg))

#endif /* WIM__STATEACCESSHELPERS_H */