     1                                  ; fcalc.asm
     2                                  extern printf
     3                                  section .data                     
     4 00000000 0000000000002240           number1     dq   9.0               
     5 00000008 0000000000405240           number2     dq   73.0
     6 00000010 546865206E756D6265-        fmt         db   "The numbers are %f and %f",10,0               
     6 00000019 727320617265202566-
     6 00000022 20616E642025660A00 
     7 0000002B 25732025660A00             fmtfloat    db   "%s %f",10,0 
     8 00000032 54686520666C6F6174-        f_sum       db   "The float sum of %f and %f is %f",10,0
     8 0000003B 2073756D206F662025-
     8 00000044 6620616E6420256620-
     8 0000004D 69732025660A00     
     9 00000054 54686520666C6F6174-        f_dif       db   "The float difference of %f and %f is %f",10,0
     9 0000005D 20646966666572656E-
     9 00000066 6365206F6620256620-
     9 0000006F 616E64202566206973-
     9 00000078 2025660A00         
    10 0000007D 54686520666C6F6174-        f_mul       db   "The float product of %f and %f is %f",10,0
    10 00000086 2070726F6475637420-
    10 0000008F 6F6620256620616E64-
    10 00000098 202566206973202566-
    10 000000A1 0A00               
    11 000000A3 54686520666C6F6174-        f_div       db   "The float division of %f by %f is %f",10,0
    11 000000AC 206469766973696F6E-
    11 000000B5 206F66202566206279-
    11 000000BE 202566206973202566-
    11 000000C7 0A00               
    12 000000C9 54686520666C6F6174-        f_sqrt      db   "The float squareroot of %f is %f",10,0
    12 000000D2 20737175617265726F-
    12 000000DB 6F74206F6620256620-
    12 000000E4 69732025660A00     
    13                                  section .bss
    14                                  section .text                     
    15                                     global main               
    16                                  main:
    17 00000000 55                         push  rbp      ; necessary because of printf with float
    18 00000001 4889E5                     mov   rbp, rsp
    19                                  ; print the numbers
    20 00000004 F20F100425-                movsd xmm0, [number1]
    20 00000009 [00000000]         
    21 0000000D F20F100C25-                movsd xmm1, [number2]
    21 00000012 [08000000]         
    22 00000016 48BF-                      mov   rdi, fmt
    22 00000018 [1000000000000000] 
    23 00000020 B802000000                 mov   rax, 2   ; two floats
    24 00000025 E8(00000000)               call  printf
    25                                  ; sum   
    26 0000002A F20F101425-                movsd xmm2, [number1]   ; double precision float into xmm
    26 0000002F [00000000]         
    27 00000033 F20F581425-                addsd xmm2, [number2]   ; add into to xmm
    27 00000038 [08000000]         
    28                                     ; print the result
    29 0000003C F20F100425-                movsd xmm0, [number1]
    29 00000041 [00000000]         
    30 00000045 F20F100C25-                movsd xmm1, [number2]
    30 0000004A [08000000]         
    31 0000004E 48BF-                      mov   rdi, f_sum
    31 00000050 [3200000000000000] 
    32 00000058 B803000000                 mov   rax, 3   ; one float
    33 0000005D E8(00000000)               call  printf
    34                                  ; difference    
    35 00000062 F20F101425-                movsd xmm2, [number1]   ; double precision float into xmm
    35 00000067 [00000000]         
    36 0000006B F20F5C1425-                subsd xmm2, [number2]   ; subtract from xmm
    36 00000070 [08000000]         
    37                                     ; print the result
    38 00000074 F20F100425-                movsd xmm0, [number1]
    38 00000079 [00000000]         
    39 0000007D F20F100C25-                movsd xmm1, [number2]
    39 00000082 [08000000]         
    40 00000086 48BF-                      mov   rdi,f_dif
    40 00000088 [5400000000000000] 
    41 00000090 B803000000                 mov   rax, 3   ; three floats
    42 00000095 E8(00000000)               call  printf
    43                                  ; multiplication  
    44 0000009A F20F101425-                movsd xmm2, [number1]   ; double precision float into xmm
    44 0000009F [00000000]         
    45 000000A3 F20F591425-                mulsd xmm2, [number2]   ; multiply with xmm 
    45 000000A8 [08000000]         
    46                                     ; print the result
    47 000000AC 48BF-                      mov   rdi, f_mul
    47 000000AE [7D00000000000000] 
    48 000000B6 F20F100425-                movsd xmm0, [number1]
    48 000000BB [00000000]         
    49 000000BF F20F100C25-                movsd xmm1, [number2]
    49 000000C4 [08000000]         
    50 000000C8 B803000000                 mov   rax,3   ; three floats
    51 000000CD E8(00000000)               call  printf
    52                                  ; division
    53 000000D2 F20F101425-                movsd xmm2, [number1]   ; double precision float into xmm
    53 000000D7 [00000000]         
    54 000000DB F20F5E1425-                divsd xmm2, [number2]   ; divide xmm0 
    54 000000E0 [08000000]         
    55                                     ; print the result
    56 000000E4 48BF-                      mov   rdi, f_div
    56 000000E6 [A300000000000000] 
    57 000000EE F20F100425-                movsd xmm0, [number1]
    57 000000F3 [00000000]         
    58 000000F7 F20F100C25-                movsd xmm1, [number2]
    58 000000FC [08000000]         
    59 00000100 B801000000                 mov   rax,1   ; one float
    60 00000105 E8(00000000)               call  printf
    61                                  ; squareroot
    62 0000010A F20F510C25-                sqrtsd xmm1, [number1]   ; squareroot double precision float in xmm
    62 0000010F [00000000]         
    63                                     ; print the result
    64 00000113 48BF-                      mov   rdi, f_sqrt
    64 00000115 [C900000000000000] 
    65 0000011D F20F100425-                movsd xmm0, [number1]
    65 00000122 [00000000]         
    66 00000126 B802000000                 mov   rax, 2   ; one float
    67 0000012B E8(00000000)               call  printf
    68                                  ; exit
    69 00000130 4889EC                     mov   rsp, rbp              
    70 00000133 5D                         pop   rbp      ; undo the push at the beginning
    71 00000134 C3                         ret
